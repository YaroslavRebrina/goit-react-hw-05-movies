{"version":3,"file":"static/js/298.aceee19f.chunk.js","mappings":"+PASA,EATmB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5B,OACE,iCACE,qCAAaD,MACb,uBAAIC,MAGT,EC8BD,EA/BgB,WACd,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAejB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGACMC,EAAAA,EAAAA,kBAA2BJ,EAASK,OAD1C,OACXC,EADW,OAEjBC,QAAQC,IAAIF,GACZP,EAAUO,EAASG,KAAKC,SAHP,2CAAH,qDAMhB,IACEP,GAGD,CAFC,MAAOQ,GACPJ,QAAQC,IAAIG,EAAMC,QACnB,CACF,GAAE,CAACZ,EAASK,SAGX,8BACqB,IAAlBP,EAAOe,QACN,4CAEAf,EAAOgB,KAAI,YAA0B,IAAvBnB,EAAsB,EAAtBA,OAAQoB,EAAc,EAAdA,QACpB,OAAO,SAAC,EAAD,CAAYpB,OAAQA,EAAQC,QAASmB,GAC7C,KAIR,C,mCChCKC,EAAc,kBADJ,oCAGhBC,EAAAA,EAAAA,SAAAA,QAAA,gCAEA,IAcMb,EAAW,CACfc,kBATwB,SAAAC,GAAE,OAAIF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,YAA0BH,GAA9B,EAU1BI,mBAhByB,kBACzBH,EAAAA,EAAAA,IAAA,+BAAkCD,GADT,EAiBzBK,kBAdwB,SAAAC,GAAK,OAC7BL,EAAAA,EAAAA,IAAA,wBAA2BD,EAA3B,kBAAmDM,GADtB,EAe7BC,kBAPwB,SAAAC,GAAO,OAC/BP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAuCR,GADR,EAQ/BS,kBAXwB,SAAAD,GAAO,OAC/BP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAuCR,GADR,GAcjC,K","sources":["components/ReviewItem/ReviewItem.jsx","components/Reviews/Reviews.jsx","services/moviesAPI.js"],"sourcesContent":["const ReviewItem = ({ author, comment }) => {\n  return (\n    <>\n      <h3>Author: {author}</h3>\n      <p>{comment}</p>\n    </>\n  );\n};\n\nexport default ReviewItem;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport movieAPI from 'services/moviesAPI';\n\nimport ReviewItem from 'components/ReviewItem/ReviewItem';\n\nconst Reviews = () => {\n  const [review, setReview] = useState([]);\n\n  const location = useLocation();\n  useEffect(() => {\n    const getReviews = async () => {\n      const response = await movieAPI.fetchMovieRewievs(location.state);\n      console.log(response);\n      setReview(response.data.results);\n    };\n\n    try {\n      getReviews();\n    } catch (error) {\n      console.log(error.messege);\n    }\n  }, [location.state]);\n\n  return (\n    <>\n      {review.length === 0 ? (\n        <p>There no reviews</p>\n      ) : (\n        review.map(({ author, content }) => {\n          return <ReviewItem author={author} comment={content} />;\n        })\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\n// const Cast = () => {\n//\n\n//\n\n//\n// export default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'fa266c0f06778ec950e19b25be59abc2';\nconst keySearchParam = `api_key=${API_KEY}`;\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nconst fetchMovieTrending = () =>\n  axios.get(`/trending/movie/week?${keySearchParam}`);\n\nconst fetchMovieOnQuery = query =>\n  axios.get(`/search/movie?${keySearchParam}&query=${query}`);\n\nconst fecthMovieDetails = id => axios.get(`/movie/${id}?${keySearchParam}`);\n\nconst fetchMovieCredits = movieId =>\n  axios.get(`/movie/${movieId}/credits?${keySearchParam}`);\n\nconst fetchMovieRewievs = movieId =>\n  axios.get(`/movie/${movieId}/reviews?${keySearchParam}`);\n\nconst movieAPI = {\n  fecthMovieDetails,\n  fetchMovieTrending,\n  fetchMovieOnQuery,\n  fetchMovieRewievs,\n  fetchMovieCredits,\n};\n\nexport default movieAPI;\n"],"names":["author","comment","useState","review","setReview","location","useLocation","useEffect","getReviews","movieAPI","state","response","console","log","data","results","error","messege","length","map","content","keySearchParam","axios","fecthMovieDetails","id","fetchMovieTrending","fetchMovieOnQuery","query","fetchMovieRewievs","movieId","fetchMovieCredits"],"sourceRoot":""}