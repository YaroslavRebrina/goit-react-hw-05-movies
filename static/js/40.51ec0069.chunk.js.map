{"version":3,"file":"static/js/40.51ec0069.chunk.js","mappings":"oPAUA,EAViB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC7B,OACE,2BACE,gBAAKC,IAAKH,EAAKI,IAAI,YACnB,wBAAKH,KACL,uBAAIC,MAGT,E,kBCPD,EAAgC,4BC8ChC,EAvCa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,MAejB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGACMC,EAAAA,EAAAA,kBAA2BJ,EAASK,OAD1C,OACXC,EADW,OAEjBC,QAAQC,IAAIF,GACZP,EAAQO,EAASG,KAAKC,MAHL,2CAAH,qDAMhB,IACEP,GAGD,CAFC,MAAOQ,GACPJ,QAAQC,IAAIG,EAAMC,QACnB,CACF,GAAE,CAACZ,EAASK,SAGX,8BACmB,IAAhBP,EAAKe,QACJ,4CAEA,eAAIC,UAAWC,EAAf,SACGjB,EAAKkB,KAAI,YAA4C,IAAzCvB,EAAwC,EAAxCA,KAAMwB,EAAkC,EAAlCA,aAAkC,EAApBC,cAC/B,OACE,SAAC,EAAD,CAEE1B,IAAK2B,EAAAA,EAAkBF,EACvBxB,KAAMA,EACNC,KAAMD,GAHDA,EAMV,OAKV,C,oBC5CD,IAFwB,kC,mCCGlB2B,EAAc,kBADJ,oCAGhBC,EAAAA,EAAAA,SAAAA,QAAA,gCAEA,IAcMjB,EAAW,CACfkB,kBATwB,SAAAC,GAAE,OAAIF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,YAA0BH,GAA9B,EAU1BI,mBAhByB,kBACzBH,EAAAA,EAAAA,IAAA,+BAAkCD,GADT,EAiBzBK,kBAdwB,SAAAC,GAAK,OAC7BL,EAAAA,EAAAA,IAAA,wBAA2BD,EAA3B,kBAAmDM,GADtB,EAe7BC,kBAPwB,SAAAC,GAAO,OAC/BP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAuCR,GADR,EAQ/BS,kBAXwB,SAAAD,GAAO,OAC/BP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAuCR,GADR,GAcjC,K","sources":["components/CastItem/CastItem.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","constatns/constants.js","services/moviesAPI.js"],"sourcesContent":["const CastItem = ({ img, name, role }) => {\n  return (\n    <li>\n      <img src={img} alt=\"artist\" />\n      <h3>{name}</h3>\n      <p>{role}</p>\n    </li>\n  );\n};\n\nexport default CastItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast__wrapper\":\"Cast_cast__wrapper__av4NW\"};","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport CastItem from 'components/CastItem/CastItem';\nimport movieAPI from 'services/moviesAPI';\nimport IMAGES_BASE_URL from 'constatns/constants';\n\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [crew, setCrew] = useState([]);\n\n  const location = useLocation();\n  useEffect(() => {\n    const getCredits = async () => {\n      const response = await movieAPI.fetchMovieCredits(location.state);\n      console.log(response);\n      setCrew(response.data.cast);\n    };\n\n    try {\n      getCredits();\n    } catch (error) {\n      console.log(error.messege);\n    }\n  }, [location.state]);\n\n  return (\n    <>\n      {crew.length === 0 ? (\n        <p>Cast is unknown</p>\n      ) : (\n        <ul className={css.cast__wrapper}>\n          {crew.map(({ name, profile_path, original_name }) => {\n            return (\n              <CastItem\n                key={name}\n                img={IMAGES_BASE_URL + profile_path}\n                name={name}\n                role={name}\n              />\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nexport default IMAGES_BASE_URL;\n","import axios from 'axios';\n\nconst API_KEY = 'fa266c0f06778ec950e19b25be59abc2';\nconst keySearchParam = `api_key=${API_KEY}`;\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nconst fetchMovieTrending = () =>\n  axios.get(`/trending/movie/week?${keySearchParam}`);\n\nconst fetchMovieOnQuery = query =>\n  axios.get(`/search/movie?${keySearchParam}&query=${query}`);\n\nconst fecthMovieDetails = id => axios.get(`/movie/${id}?${keySearchParam}`);\n\nconst fetchMovieCredits = movieId =>\n  axios.get(`/movie/${movieId}/credits?${keySearchParam}`);\n\nconst fetchMovieRewievs = movieId =>\n  axios.get(`/movie/${movieId}/reviews?${keySearchParam}`);\n\nconst movieAPI = {\n  fecthMovieDetails,\n  fetchMovieTrending,\n  fetchMovieOnQuery,\n  fetchMovieRewievs,\n  fetchMovieCredits,\n};\n\nexport default movieAPI;\n"],"names":["img","name","role","src","alt","useState","crew","setCrew","location","useLocation","useEffect","getCredits","movieAPI","state","response","console","log","data","cast","error","messege","length","className","css","map","profile_path","original_name","IMAGES_BASE_URL","keySearchParam","axios","fecthMovieDetails","id","fetchMovieTrending","fetchMovieOnQuery","query","fetchMovieRewievs","movieId","fetchMovieCredits"],"sourceRoot":""}