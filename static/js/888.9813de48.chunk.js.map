{"version":3,"file":"static/js/888.9813de48.chunk.js","mappings":"gRACA,EAA+B,mCAA/B,EAAgF,kCAAhF,EAAgI,kCAAhI,EAA6L,+CAA7L,EAAuQ,+C,SCkFvQ,EA3EqB,WAAO,IAAD,IACzB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACxCC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,oGACQC,EAAAA,EAAAA,kBAA2BJ,GADnC,cACTK,EADS,OAGfZ,EAASY,EAASC,MAHH,8DAAH,qDAOd,IACEH,GAGD,CAFC,MAAOI,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,CAACV,KAGF,iCACE,SAAC,KAAD,CAAMW,GAAIf,EAASgB,QAASC,UAAWC,EAAvC,qBAGCtB,IACC,iBAAKqB,UAAWC,EAAhB,WACE,gBACEC,IAAG,UAAKC,EAAAA,GAAL,OAAuBxB,EAAMyB,aAChCC,IAAI,cACJC,MAAM,QACNC,OAAO,WAET,iBAAKP,UAAWC,EAAhB,WACE,wBAAKtB,EAAM6B,SACX,kDAAmB7B,EAAM8B,kBACzB,sCACA,uBAAI9B,EAAM+B,YACV,oCACA,wBACG/B,EAAMgC,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChB,wBAAgBA,GAAPA,EADO,aAO1B,gBAAIb,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CACEH,GAAG,OACHb,MAAOE,EACPa,UAAWC,EAHb,qBAQF,yBACE,SAAC,KAAD,CACEH,GAAG,UACHb,MAAOE,EACPa,UAAWC,EAHb,2BASJ,SAAC,EAAAa,SAAD,CAAUC,UAAU,SAAC,KAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,oBC/ED,IAFwB,kC,mCCGlBC,EAAc,kBADJ,oCAGhBC,EAAAA,EAAAA,SAAAA,QAAA,gCAEA,IAcM1B,EAAW,CACf2B,kBATwB,SAAAC,GAAE,OAAIF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,YAA0BH,GAA9B,EAU1BI,mBAhByB,kBACzBH,EAAAA,EAAAA,IAAA,+BAAkCD,GADT,EAiBzBK,kBAdwB,SAAAC,GAAK,OAC7BL,EAAAA,EAAAA,IAAA,wBAA2BD,EAA3B,kBAAmDM,GADtB,EAe7BC,kBAPwB,SAAAC,GAAO,OAC/BP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAuCR,GADR,EAQ/BS,kBAXwB,SAAAD,GAAO,OAC/BP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAuCR,GADR,GAcjC,K","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","constatns/constants.js","services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"info_wrapper\":\"MovieDetails_info_wrapper__Wrux0\",\"img_wrapper\":\"MovieDetails_img_wrapper__r1XSg\",\"back_button\":\"MovieDetails_back_button__oWDUY\",\"additional__info_wrapper\":\"MovieDetails_additional__info_wrapper__rqMBc\",\"buttons__addtional__info\":\"MovieDetails_buttons__addtional__info__mzv1c\"};","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Audio } from 'react-loader-spinner';\nimport movieAPI from 'services/moviesAPI';\nimport IMAGES_BASE_URL from 'constatns/constants';\n\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n  const { movieid } = useParams();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const response = await movieAPI.fecthMovieDetails(movieid);\n\n      setMovie(response.data);\n      return;\n    };\n\n    try {\n      getMovie();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [movieid]);\n\n  return (\n    <>\n      <Link to={backLink.current} className={css.back_button}>\n        Go back\n      </Link>\n      {movie && (\n        <div className={css.img_wrapper}>\n          <img\n            src={`${IMAGES_BASE_URL}${movie.poster_path}`}\n            alt=\"film poster\"\n            width=\"400px\"\n            height=\"300px\"\n          />\n          <div className={css.info_wrapper}>\n            <h1>{movie.title}</h1>\n            <p>User score: {`${movie.vote_average}`}</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <ul>\n              {movie.genres.map(({ name }) => (\n                <li key={name}>{name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <ul className={css.additional__info_wrapper}>\n        <li>\n          <Link\n            to=\"cast\"\n            state={movieid}\n            className={css.buttons__addtional__info}\n          >\n            cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"reviews\"\n            state={movieid}\n            className={css.buttons__addtional__info}\n          >\n            reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Audio />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nexport default IMAGES_BASE_URL;\n","import axios from 'axios';\n\nconst API_KEY = 'fa266c0f06778ec950e19b25be59abc2';\nconst keySearchParam = `api_key=${API_KEY}`;\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nconst fetchMovieTrending = () =>\n  axios.get(`/trending/movie/week?${keySearchParam}`);\n\nconst fetchMovieOnQuery = query =>\n  axios.get(`/search/movie?${keySearchParam}&query=${query}`);\n\nconst fecthMovieDetails = id => axios.get(`/movie/${id}?${keySearchParam}`);\n\nconst fetchMovieCredits = movieId =>\n  axios.get(`/movie/${movieId}/credits?${keySearchParam}`);\n\nconst fetchMovieRewievs = movieId =>\n  axios.get(`/movie/${movieId}/reviews?${keySearchParam}`);\n\nconst movieAPI = {\n  fecthMovieDetails,\n  fetchMovieTrending,\n  fetchMovieOnQuery,\n  fetchMovieRewievs,\n  fetchMovieCredits,\n};\n\nexport default movieAPI;\n"],"names":["useState","movie","setMovie","location","useLocation","backLink","useRef","state","from","movieid","useParams","useEffect","getMovie","movieAPI","response","data","error","console","log","message","to","current","className","css","src","IMAGES_BASE_URL","poster_path","alt","width","height","title","vote_average","overview","genres","map","name","Suspense","fallback","keySearchParam","axios","fecthMovieDetails","id","fetchMovieTrending","fetchMovieOnQuery","query","fetchMovieRewievs","movieId","fetchMovieCredits"],"sourceRoot":""}